{"version":3,"sources":["webpack:///./src/components/IntroPitch/index.jsx","webpack:///./src/pages/resources.js","webpack:///./src/components/PageBanner/styles.js","webpack:///./src/components/PageBanner/index.js","webpack:///./src/components/PageBody.js","webpack:///./src/components/Globals/index.style.js"],"names":["Wrapper","styled","div","Excerpt","p","Header","h1","IntroPitch","props","intro","dangerouslySetInnerHTML","__html","descriptions","childMarkdownRemark","html","propTypes","PropTypes","string","ResourcePage","data","console","log","image","allContentfulPage","edges","node","heroImage","file","url","title","subtitle","content","pageQuery","FullWidthGrid","Grid","Banner","section","css","Inner","Headings","BannerTitle","SubBannerTitle","PageBanner","data-key","center","lg","xs","oneOfType","object","PageBody","Section"],"mappings":"6FAAA,0DAIMA,EAAUC,IAAOC,IAAV,0EAAGD,CAAH,iHAWPE,EAAUF,IAAOG,EAAV,0EAAGH,CAAH,8CAKPI,EAASJ,IAAOK,GAAV,yEAAGL,CAAH,qDAKNM,EAAa,SAACC,GAClB,OACE,kBAACR,EAAD,KACE,kBAACK,EAAD,KAASG,EAAMC,OACf,kBAACN,EAAD,CACEO,wBAAyB,CACvBC,OAAQH,EAAMI,aAAaC,oBAAoBC,UAO1CP,MAEfA,EAAWQ,UAAY,CACrBN,MAAOO,IAAUC,OACjBL,aAAcI,IAAUC,S,oCC1C1B,sIAgCeC,UAxBM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEtB,OADAC,QAAQC,IAAIF,GAEV,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEG,MAAOH,EAAKI,kBAAkBC,MAAM,GAAGC,KAAKC,UAAUC,KAAKC,IAC3DC,MAAOV,EAAKI,kBAAkBC,MAAM,GAAGC,KAAKI,MAC5CC,SAAUX,EAAKI,kBAAkBC,MAAM,GAAGC,KAAKK,WAEjD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACErB,MAAOU,EAAKI,kBAAkBC,MAAM,GAAGC,KAAKhB,MAC5CG,aAAcO,EAAKI,kBAAkBC,MAAM,GAAGC,KAAKb,eAErD,kBAAC,IAAD,CAAUmB,QAASZ,EAAKI,kBAAkBC,MAAM,GAAGC,KAAKM,eAU7D,IAAMC,EAAS,c,wGCdTC,EAAgBhC,YAAOiC,QAAV,4EAAGjC,CAAH,6DAQbkC,EAASlC,IAAOmC,QAAV,qEAAGnC,CAAH,2gBAmBf,gBAAGqB,EAAH,EAAGA,MAAH,OACAA,GACAe,YADK,+BAEqBf,MA2BxB,YAAgB,IAAbA,EAAY,EAAZA,MACH,OAAOA,GAASA,KAITgB,EAAQrC,IAAOC,IAAV,oEAAGD,CAAH,oKAcLsC,EAAWtC,IAAOC,IAAV,uEAAGD,CAAH,mJAeRuC,EAAcvC,IAAOK,GAAV,0EAAGL,CAAH,mCAKXwC,EAAiBxC,IAAOG,EAAV,6EAAGH,CAAH,mDCzGrByC,EAAa,SAAC,GAAgC,IAA9BpB,EAA6B,EAA7BA,MAAOO,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClC,OACE,oCACE,kBAACK,EAAD,CAAQb,MAAOA,EAAOqB,WAAS,eAC7B,kBAACL,EAAD,KACE,kBAACL,EAAD,KACE,kBAAC,MAAD,CAAKW,OAAO,MACV,kBAAC,MAAD,CAAKC,GAAI,EAAGC,GAAI,IACd,kBAACP,EAAD,KACE,kBAACC,EAAD,KAAcX,GACd,kBAACY,EAAD,KAAiBX,WAWnCY,EAAW3B,UAAY,CACrBO,MAAON,IAAU+B,UAAU,CAAC/B,IAAUgC,OAAQhC,IAAUC,SACxDa,SAAUd,IAAUC,OACpBY,MAAOb,IAAUC,QAGJyB,O,kCCtCf,yBAYeO,IAVE,SAACzC,GAChB,OACE,yBACEE,wBAAyB,CACvBC,OAAQH,EAAMuB,QAAQlB,oBAAoBC,U,kCCNlD,oFAEaoB,EAAOjC,IAAOC,IAAV,uEAAGD,CAAH,4IAcJiD,EAAUjD,IAAOmC,QAAV,0EAAGnC,CAAH,uFASKA,IAAOC,IAAV,4EAAGD,CAAH","file":"component---src-pages-resources-js-701133d7491c7b7d5ef4.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: left\n\n  @media (min-width: 992px) {\n    padding 0 5em;\n    max-width: 948px\n  }\n`\n\nconst Excerpt = styled.p`\n  margin: 0 1rem 1rem 1rem;\n  line-height: 1.6;\n`\n\nconst Header = styled.h1`\n  border-bottom: solid 1px #673ab7;\n  padding: 18px 0;\n`\n\nconst IntroPitch = (props) => {\n  return (\n    <Wrapper>\n      <Header>{props.intro}</Header>\n      <Excerpt\n        dangerouslySetInnerHTML={{\n          __html: props.descriptions.childMarkdownRemark.html,\n        }}\n      />\n    </Wrapper>\n  )\n}\n\nexport default IntroPitch\n\nIntroPitch.propTypes = {\n  intro: PropTypes.string,\n  descriptions: PropTypes.string,\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport PageBanner from '../components/PageBanner/index'\nimport { Grid, Section } from '../components/Globals/index.style'\nimport IntroPitch from '../components/IntroPitch/index'\nimport PageBody from '../components/PageBody'\n\nconst ResourcePage = ({ data }) => {\n  console.log(data)\n  return (\n    <>\n      <Layout>\n        <PageBanner\n          image={data.allContentfulPage.edges[0].node.heroImage.file.url}\n          title={data.allContentfulPage.edges[0].node.title}\n          subtitle={data.allContentfulPage.edges[0].node.subtitle}\n        />\n        <Section>\n          <Grid>\n            <IntroPitch\n              intro={data.allContentfulPage.edges[0].node.intro}\n              descriptions={data.allContentfulPage.edges[0].node.descriptions}\n            />\n            <PageBody content={data.allContentfulPage.edges[0].node.content} />\n          </Grid>\n        </Section>\n      </Layout>\n    </>\n  )\n}\n\nexport default ResourcePage\n\nexport const pageQuery = graphql`\n  query ResourcePageQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allContentfulPage(\n      filter: { id: { eq: \"96462413-7acc-5956-8aa9-873a16f39050\" } }\n    ) {\n      edges {\n        node {\n          id\n          title\n          slug\n          intro\n          subtitle\n          descriptions {\n            childMarkdownRemark {\n              html\n              excerpt(pruneLength: 80)\n            }\n          }\n          heroImage {\n            file {\n              url\n            }\n          }\n          content {\n            childMarkdownRemark {\n              html\n              excerpt(pruneLength: 80)\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import styled, { css } from 'styled-components'\nimport { Grid } from 'react-flexbox-grid'\n\n// export const resizeImage = (\n//   path,\n//   width = 768,\n//   height = 'auto',\n//   config = {}\n// ) => {\n//   if (!path('//image.ctfassets.net')) return path\n//   const { crop = true, quality = 80, overlay = null } = config\n//   const defaultTransforms = `?auto=webp&format=pjpg&quality=${quality}`\n//   const paramWidth = `&width=${width}`\n//   const paramHeight = `&height=${height}`\n//   const paramFit = height !== 'auto' ? `&fit=${crop ? 'crop' : 'bounds'}` : ''\n//   const paramOverlay = overlay ? `&overlay=${overlay}&overlay-repeat=both` : ''\n\n//   return `${path}${defaultTransforms}${paramWidth}${paramHeight}${paramFit}${paramOverlay}`\n// }\n\nexport const FullWidthGrid = styled(Grid)`\n  width: 100%;\n\n  @media (min-width: 552px) {\n    margin-top: 14px 0;\n  }\n`\n\nexport const Banner = styled.section`\n  background-color: rgb(45, 47, 61);\n  background-position: center;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  min-height: 400px;\n  overflow: hidden;\n  position: relative;\n\n  @media (min-width: 320px) {\n    height: 40vw;\n  }\n\n  @media (min-width: 552px) {\n    max-height: 848px;\n  }\n\n  /* LoadingBG */\n  ${({ image }) =>\n    image &&\n    css`\n      background-image: url(${image});\n    `}\n\n  /* Dark overlay */\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n    background-color: rgb(16, 38, 48);\n    opacity: 0.5;\n  }\n\n  /* Load full bg */\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n    background-position: center;\n    background-size: cover;\n    ${({ image }) => {\n      return image && image\n    }}\n  }\n`\nexport const Inner = styled.div`\n  align-items: center;\n  display: flex;\n  flex-grow: 1;\n  justify-content: center;\n  position: relative;\n  top: 0;\n  width: 100%;\n  z-index: 1;\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 36px 0;\n`\n\nexport const Headings = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n\n  @media (min-width: 320px) {\n    padding: 0 8px;\n  }\n\n  > * {\n    &::first-letter {\n      text-transform: capitalize;\n    }\n  }\n`\nexport const BannerTitle = styled.h1`\n  font-size: 60px;\n  color #FFFFFF;\n`\n\nexport const SubBannerTitle = styled.p`\n  color: #ffffff;\n  font-size: 34px;\n  margin-top: -1em;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Row, Col } from 'react-flexbox-grid'\nimport {\n  Banner,\n  FullWidthGrid,\n  Headings,\n  Inner,\n  BannerTitle,\n  SubBannerTitle,\n} from './styles'\nconst PageBanner = ({ image, title, subtitle }) => {\n  return (\n    <>\n      <Banner image={image} data-key=\"page-banner\">\n        <Inner>\n          <FullWidthGrid>\n            <Row center=\"xs\">\n              <Col lg={9} xs={12}>\n                <Headings>\n                  <BannerTitle>{title}</BannerTitle>\n                  <SubBannerTitle>{subtitle}</SubBannerTitle>\n                </Headings>\n              </Col>\n            </Row>\n          </FullWidthGrid>\n        </Inner>\n      </Banner>\n    </>\n  )\n}\n\nPageBanner.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  subtitle: PropTypes.string,\n  title: PropTypes.string,\n}\n\nexport default PageBanner\n","import React from 'react'\n\nconst PageBody = (props) => {\n  return (\n    <div\n      dangerouslySetInnerHTML={{\n        __html: props.content.childMarkdownRemark.html,\n      }}\n    />\n  )\n}\n\nexport default PageBody\n","import styled from 'styled-components'\n\nexport const Grid = styled.div`\n  width: calc(100% - 10vmin);\n  max-width: 1200px;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    padding: 0 34px;\n  }\n\n  @media (min-width: 500px) {\n    padding: 0;\n  }\n`\n\nexport const Section = styled.section`\n  background-color: #ffffff;\n  padding: 86px 0;\n\n  @media (min-width: 768px) {\n    padding: 34px 0;\n  }\n`\n\nexport const Contained = styled.div`\n  margin: 0 auto;\n  max-width: 1200px;\n`\n"],"sourceRoot":""}