{"version":3,"sources":["webpack:///./src/components/Card/CardList.js","webpack:///./src/components/Card/Card.js","webpack:///./src/components/FeaturedCard/index.js","webpack:///./src/components/CallToAction/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/PageBanner/styles.js","webpack:///./src/components/PageBanner/index.js","webpack:///./src/components/Globals/index.style.js"],"names":["Wrapper","styled","div","CardList","props","children","Content","Title","h2","Excerpt","p","Card","to","slug","sizes","image","title","dangerouslySetInnerHTML","__html","description","ImgWrapper","FeaturedCardImg","Img","Text","FeaturedCard","descriptions","childMarkdownRemark","html","propTypes","PropTypes","string","oneOfType","object","CtaWrapper","CtaButton","button","CtaTitle","CallToAction","actionText","pageQuery","Index","data","products","allContentfulProducts","edges","PageBanner","allContentfulBanner","node","file","url","subtitle","IntroPitch","intro","allContentfulIntroduction","map","product","key","id","heroImage","excerpt","allContentfulCallToAll","allContentfulFeaturedCard","FullWidthGrid","Grid","Banner","section","css","Inner","Headings","BannerTitle","h1","SubBannerTitle","data-key","center","lg","xs","Section"],"mappings":"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","file":"component---src-pages-index-js-8811b98c6c3d6ff08036.js","sourcesContent":["import React from 'react'\nimport { Row, Col } from 'react-flexbox-grid'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  margin: 0 auto;\n  padding: 10px;\n  &::after {\n    content: '';\n    flex: 0 0 32%;\n  }\n`\n\nconst CardList = (props) => {\n  return <Wrapper>{props.children}</Wrapper>\n}\n\nexport default CardList\n","import React from 'react'\nimport Link from 'gatsby-link'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\n\nconst Content = styled.div`\n  border-radius: 2px;\n  margin: 0 0 1em 0;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);\n  transition: all 200ms ease-in;\n\n  @media screen and (min-width: 320px) {\n    flex: 0 0 100%;\n    margin: 0 0 2vw 0;\n  }\n  @media screen and (min-width: 520px) {\n    flex: 0 0 50%;\n    margin: 0 -6px 2vw 0;\n  }\n  @media screen and (min-width: 768px) {\n    flex: 0 0 32%;\n  }\n  &:hover {\n    box-shadow: 0 16px 32px rgba(0, 0, 0, 0.09);\n    transform: translateY(-4px);\n    transition: all 0.4s ease-in;\n  }\n  a {\n    display: flex;\n    flex-flow: column;\n    height: 100%;\n    width: 100%;\n    color: #000000;\n    text-decoration: none;\n    .gatsby-image-wrapper {\n      height: 0;\n      padding-bottom: 60%;\n    }\n  }\n`\n\nconst Title = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  text-transform: capitalize;\n  padding: 1em;\n`\n\nconst Excerpt = styled.p`\n  margin: 0 1rem 1rem 1rem;\n  line-height: 1.6;\n`\n\nconst Card = (props) => {\n  return (\n    <Content>\n      <Link to={`/${props.slug}/`}>\n        <Img sizes={props.image.sizes} />\n        <Title>{props.title}</Title>\n        <Excerpt\n          dangerouslySetInnerHTML={{\n            __html: props.description,\n          }}\n        />\n      </Link>\n    </Content>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: auto;\n  border=radius: 4px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`\n\nconst ImgWrapper = styled.div`\n  display: inline-block;\n  position: relative;\n  overflow: hidden;\n  height: 160px;\n  max-height: 50vw;\n  @supports (display: flex) {\n    flex: 1;\n  }\n\n  @media (min-width: 320px) {\n    flex: 1;\n    height: auto;\n    min-height: 45vh;\n    max-height: 100%;\n\n    @supports (display: flex) {\n      min-height: auto;\n    }\n  }\n`\n\nconst Excerpt = styled.p`\n  margin: 0 1rem 1rem 1rem;\n  line-height: 1.6;\n`\nconst FeaturedCardImg = styled(Img)`\n  width: 100%;\n  height: 100%;\n  flex: 1;\n\n  @supports (object-fit: cover) {\n    object-fit: cover;\n`\n\nconst Text = styled.div`\n  @supports (display: flex) {\n    flex: 1;\n  }\n  padding: 32px;\n\n  @media (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    justify-content: center;\n    margin: 34px 0;\n    padding: 48px;\n  }\n`\n\nconst FeaturedCard = (props) => {\n  return (\n    <Wrapper>\n      <ImgWrapper>\n        <FeaturedCardImg sizes={props.image.sizes} />\n      </ImgWrapper>\n      <Text>\n        <p>{props.title}</p>\n        <Excerpt\n          dangerouslySetInnerHTML={{\n            __html: props.descriptions.childMarkdownRemark.html,\n          }}\n        />\n      </Text>\n    </Wrapper>\n  )\n}\n\nFeaturedCard.propTypes = {\n  title: PropTypes.string,\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  descriptions: PropTypes.string,\n}\n\nexport default FeaturedCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst CtaWrapper = styled.div`\n  display: flex;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #3b0670;\n  padding: 2em;\n  color: #ffffff;\n  line-height: 0.5;\n`\n\nconst CtaButton = styled.button`\n  padding: 15px 20px;\n  font-size: 20px;\n  border-radius: 4px;\n  cursor: pointer;\n`\n\nconst Excerpt = styled.p`\n  margin: 0 1rem 1rem 1rem;\n  line-height: 1.6;\n  max-width: 768px;\n  text-align: center;\n  font-size: 18px;\n`\n\nconst CtaTitle = styled.h2`\n  font-weight: 700;\n`\n\nconst CallToAction = (props) => {\n  return (\n    <CtaWrapper>\n      <CtaTitle>{props.title}</CtaTitle>\n      <Excerpt\n        dangerouslySetInnerHTML={{\n          __html: props.descriptions.childMarkdownRemark.html,\n        }}\n      />\n      <CtaButton>{props.actionText}</CtaButton>\n    </CtaWrapper>\n  )\n}\n\nCallToAction.propTypes = {\n  title: PropTypes.string,\n  descriptions: PropTypes.string,\n  actionText: PropTypes.string,\n}\n\nexport default CallToAction\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport PageBanner from '../components/PageBanner/index'\nimport IntroPitch from '../components/IntroPitch/index'\nimport CardList from '../components/Card/CardList'\nimport Card from '../components/Card/Card'\nimport { Grid, Section } from '../components/Globals/index.style'\nimport FeaturedCard from '../components/FeaturedCard/index'\nimport CallToAction from '../components/CallToAction/index'\n\nconst Index = ({ data }) => {\n  const products = data.allContentfulProducts.edges\n\n  return (\n    <>\n      <Layout>\n        <PageBanner\n          image={data.allContentfulBanner.edges[0].node.image.file.url}\n          title={data.allContentfulBanner.edges[0].node.title}\n          subtitle={data.allContentfulBanner.edges[0].node.subtitle}\n        />\n        <Section>\n          <Grid>\n            <IntroPitch\n              intro={data.allContentfulIntroduction.edges[0].node.title}\n              descriptions={\n                data.allContentfulIntroduction.edges[0].node.descriptions\n              }\n            />\n          </Grid>\n        </Section>\n        <Section>\n          <Grid>\n            <CardList>\n              {products.map(({ node: product }) => (\n                <Card\n                  key={product.id}\n                  slug={product.slug}\n                  image={product.heroImage}\n                  title={product.title}\n                  excerpt={product.descriptions}\n                />\n              ))}\n            </CardList>\n          </Grid>\n        </Section>\n        <Section>\n          <CallToAction\n            title={data.allContentfulCallToAll.edges[0].node.title}\n            descriptions={\n              data.allContentfulCallToAll.edges[0].node.descriptions\n            }\n            actionText={data.allContentfulCallToAll.edges[0].node.actionText}\n          />\n        </Section>\n        <Section>\n          <Grid>\n            <FeaturedCard\n              title={data.allContentfulFeaturedCard.edges[0].node.title}\n              image={data.allContentfulFeaturedCard.edges[0].node.heroImage}\n              descriptions={\n                data.allContentfulFeaturedCard.edges[0].node.descriptions\n              }\n            />\n          </Grid>\n        </Section>\n      </Layout>\n    </>\n  )\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\n  query LandingPageQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allContentfulBanner {\n      edges {\n        node {\n          image {\n            file {\n              url\n            }\n          }\n          subtitle\n          title\n        }\n      }\n    }\n    allContentfulIntroduction {\n      edges {\n        node {\n          title\n          descriptions {\n            childMarkdownRemark {\n              html\n              excerpt(pruneLength: 80)\n            }\n          }\n        }\n      }\n    }\n    allContentfulFeaturedCard {\n      edges {\n        node {\n          title\n          descriptions {\n            childMarkdownRemark {\n              html\n              excerpt(pruneLength: 80)\n            }\n          }\n          heroImage {\n            sizes(maxWidth: 380, resizingBehavior: SCALE) {\n              ...GatsbyContentfulSizes_withWebp_noBase64\n            }\n          }\n        }\n      }\n    }\n    allContentfulCallToAll {\n      edges {\n        node {\n          title\n          descriptions {\n            childMarkdownRemark {\n              html\n              excerpt(pruneLength: 80)\n            }\n          }\n          actionText\n        }\n      }\n    }\n    allContentfulProducts {\n      edges {\n        node {\n          title\n          id\n          slug\n          intro\n          descriptions {\n            childMarkdownRemark {\n              html\n              excerpt(pruneLength: 80)\n            }\n          }\n          heroImage {\n            title\n            sizes(maxWidth: 1800) {\n              ...GatsbyContentfulSizes_withWebp_noBase64\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import styled, { css } from 'styled-components'\nimport { Grid } from 'react-flexbox-grid'\n\n// export const resizeImage = (\n//   path,\n//   width = 768,\n//   height = 'auto',\n//   config = {}\n// ) => {\n//   if (!path('//image.ctfassets.net')) return path\n//   const { crop = true, quality = 80, overlay = null } = config\n//   const defaultTransforms = `?auto=webp&format=pjpg&quality=${quality}`\n//   const paramWidth = `&width=${width}`\n//   const paramHeight = `&height=${height}`\n//   const paramFit = height !== 'auto' ? `&fit=${crop ? 'crop' : 'bounds'}` : ''\n//   const paramOverlay = overlay ? `&overlay=${overlay}&overlay-repeat=both` : ''\n\n//   return `${path}${defaultTransforms}${paramWidth}${paramHeight}${paramFit}${paramOverlay}`\n// }\n\nexport const FullWidthGrid = styled(Grid)`\n  width: 100%;\n\n  @media (min-width: 552px) {\n    margin-top: 14px 0;\n  }\n`\n\nexport const Banner = styled.section`\n  background-color: rgb(45, 47, 61);\n  background-position: center;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  min-height: 400px;\n  overflow: hidden;\n  position: relative;\n\n  @media (min-width: 320px) {\n    height: 40vw;\n  }\n\n  @media (min-width: 552px) {\n    max-height: 848px;\n  }\n\n  /* LoadingBG */\n  ${({ image }) =>\n    image &&\n    css`\n      background-image: url(${image});\n    `}\n\n  /* Dark overlay */\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n    background-color: rgb(16, 38, 48);\n    opacity: 0.5;\n  }\n\n  /* Load full bg */\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n    background-position: center;\n    background-size: cover;\n    ${({ image }) => {\n      return image && image\n    }}\n  }\n`\nexport const Inner = styled.div`\n  align-items: center;\n  display: flex;\n  flex-grow: 1;\n  justify-content: center;\n  position: relative;\n  top: 0;\n  width: 100%;\n  z-index: 1;\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 36px 0;\n`\n\nexport const Headings = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n\n  @media (min-width: 320px) {\n    padding: 0 8px;\n  }\n\n  > * {\n    &::first-letter {\n      text-transform: capitalize;\n    }\n  }\n`\nexport const BannerTitle = styled.h1`\n  font-size: 60px;\n  color #FFFFFF;\n`\n\nexport const SubBannerTitle = styled.p`\n  color: #ffffff;\n  font-size: 34px;\n  margin-top: -1em;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Row, Col } from 'react-flexbox-grid'\nimport {\n  Banner,\n  FullWidthGrid,\n  Headings,\n  Inner,\n  BannerTitle,\n  SubBannerTitle,\n} from './styles'\nconst PageBanner = ({ image, title, subtitle }) => {\n  return (\n    <>\n      <Banner image={image} data-key=\"page-banner\">\n        <Inner>\n          <FullWidthGrid>\n            <Row center=\"xs\">\n              <Col lg={9} xs={12}>\n                <Headings>\n                  <BannerTitle>{title}</BannerTitle>\n                  <SubBannerTitle>{subtitle}</SubBannerTitle>\n                </Headings>\n              </Col>\n            </Row>\n          </FullWidthGrid>\n        </Inner>\n      </Banner>\n    </>\n  )\n}\n\nPageBanner.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  subtitle: PropTypes.string,\n  title: PropTypes.string,\n}\n\nexport default PageBanner\n","import styled from 'styled-components'\n\nexport const Grid = styled.div`\n  width: calc(100% - 10vmin);\n  max-width: 1200px;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    padding: 0 34px;\n  }\n\n  @media (min-width: 500px) {\n    padding: 0;\n  }\n`\n\nexport const Section = styled.section`\n  background-color: #ffffff;\n  padding: 86px 0;\n\n  @media (min-width: 768px) {\n    padding: 34px 0;\n  }\n`\n\nexport const Contained = styled.div`\n  margin: 0 auto;\n  max-width: 1200px;\n`\n"],"sourceRoot":""}